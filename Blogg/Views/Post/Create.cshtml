@model Blogg.Models.Post
@inject UserManager<ApplicationUser> userManager;
@inject SignInManager<ApplicationUser> SignInManager;
@{
    ViewData["Title"] = "Create Post";
}

<div class="card-header"><h4>Create Post</h4></div>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @*<input type="hidden" asp-for="ApplicationUser.Id" value="@userManager.GetUserId(User); "/>*@
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Body" class="control-label"></label>
                    <textarea asp-for="Body" class="form-control"></textarea>
                    <span asp-validation-for="Body" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Created" class="control-label"></label>
                    <input asp-for="Created" class="form-control" />
                    <span asp-validation-for="Created" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
